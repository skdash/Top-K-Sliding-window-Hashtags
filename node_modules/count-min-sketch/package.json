{
  "name": "count-min-sketch",
  "version": "0.1.1",
  "description": "Count-Min Sketch Data Structure",
  "main": "count-min.js",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "k-hash": "~0.0.0"
  },
  "devDependencies": {
    "tape": "~1.0.4"
  },
  "scripts": {
    "test": "tap test/*.js"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/mikolalysenko/count-min-sketch.git"
  },
  "keywords": [
    "count-min",
    "count",
    "min",
    "increment",
    "frequency",
    "probabilistic",
    "random",
    "bloom",
    "filter",
    "heavy",
    "hitter",
    "sparse",
    "stream",
    "algorithm"
  ],
  "author": {
    "name": "Mikola Lysenko"
  },
  "license": "MIT",
  "readmeFilename": "README.md",
  "gitHead": "f992fd4fa4f6d8f57399084c89692232fc5428d8",
  "bugs": {
    "url": "https://github.com/mikolalysenko/count-min-sketch/issues"
  },
  "readme": "count-min-sketch\n================\nAn implementation of Coromode and Muthukrishnan's [Count-Min sketch](http://en.wikipedia.org/wiki/Count-Min_sketch) data structure for JavaScript.  The count-min sketch is basically a high powered generalization of the bloom filter.  While a bloom filter gives an efficient way to approximate membership of a set, a count-min sketch can give approximate data about the relative frequency of items in the set.\n\nFor more information see the following references:\n\n* Count-Min sketch:  https://sites.google.com/site/countminsketch/\n* next big thing syndrome: http://lkozma.net/blog/sketching-data-structures/\n* G. Cormode, S. Muthukrishnan. [\"Approximating Data with the Count-Min Data Structure\"](http://dimacs.rutgers.edu/~graham/pubs/papers/cmsoft.pdf).  IEEE Trans. on Software (2012)\n\n## Example\n\n```javascript\n//Import library\nvar createCountMinSketch = require(\"count-min-sketch\")\n\n//Create data structure\nvar sketch = createCountMinSketch()\n\n//Increment counters\nsketch.update(\"foo\", 1)\nsketch.update(1515, 104)\n\n//Query results\nconsole.log(sketch.query(1515))  //Prints 104\nconsole.log(sketch.query(\"foo\")) //Prints 1\n```\n\n## Install\n\n    npm install count-min-sketch\n    \n## API\n\n`module.exports` is a constructor for the data structure, and you import it like so:\n\n```javascript\nvar createCountMinSketch = require(\"count-min-sketch\")\n```\n\n### `var sketch = createCountMinSketch(epsilon, probError[, hashFunc])`\nCreates a count-min sketch data structure.\n\n* `epsilon` is the accuracy of the data structure (ie the size of bins that we are computing frequencies of)\n* `probError` is the probability of incorrectly computing a value\n* `hashFunc(key, hashes)` is a hash function for the data structure. (optional)  the parameters to this function are as follows:\n\n    + `key` is the item that is being hashed\n    + `hashes` is an array of `k` hashes which are required to be pairwise independent.\n\n**Returns** A count-min sketch data structure\n\n### `sketch.update(key, v)`\nAdds `v` to `key`\n\n* `key` is the item in the table to increment.\n* `v` is the amount to add to it\n\n\n### `sketch.query(key)`\nReturns the frequency of the item `key`\n\n* `key` is the item whose frequency we are counting\n\n**Returns** An estimate of the frequency of `key`\n\n### `sketch.toJSON()`\nReturns a serializable JSON representation of the table.\n\n### `sketch.fromJSON(obj)`\nConverts a JSON object into a deserialized sketch.  The hash function is reused from the current sketch.  \n\n**Note** In order for this to be successful both the serialized hash table and the current hash table have to have the same hash function.\n\n## Credits\n(c) 2013 Mikola Lysenko. MIT License\n",
  "_id": "count-min-sketch@0.1.1",
  "dist": {
    "shasum": "eaa0a7210a068c1265435b16ac90f81da4a7e06a",
    "tarball": "http://registry.npmjs.org/count-min-sketch/-/count-min-sketch-0.1.1.tgz"
  },
  "_from": "count-min-sketch@",
  "_npmVersion": "1.2.24",
  "_npmUser": {
    "name": "mikolalysenko",
    "email": "mikolalysenko@gmail.com"
  },
  "maintainers": [
    {
      "name": "mikolalysenko",
      "email": "mikolalysenko@gmail.com"
    }
  ],
  "_shasum": "eaa0a7210a068c1265435b16ac90f81da4a7e06a",
  "_resolved": "http://registry.npmjs.org/count-min-sketch/-/count-min-sketch-0.1.1.tgz",
  "homepage": "https://github.com/mikolalysenko/count-min-sketch"
}
